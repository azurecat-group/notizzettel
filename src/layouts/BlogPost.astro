---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"article">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="ko">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			ol {
				width: 100%;
				max-width: 800px;
				margin: 1em auto;
				padding-left: 2em;
			}
			ol li {
				margin: 0.5em 0;
				text-align: left;
			}
			.article a {
				text-decoration: underline;
			}
		</style>
		<script>
			document.addEventListener("DOMContentLoaded", () => {
				const article = document.querySelector(".article");
				if (article) {
					const links = article.getElementsByTagName("a");
					Array.from(links).forEach((link) => {
						link.setAttribute("target", "_blank");
					});
				}
			});
		</script>
	</head>

	<body>
		<Header />
		<main class="text-center">
			<article class="flex flex-col items-center justify-center">
				<div class="hero-image">
					{
						heroImage && (
							<img
								width={1020}
								height={510}
								src={heroImage}
								alt=""
							/>
						)
					}
				</div>
				<div
					class="container flex flex-col items-center justify-center"
				>
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on{" "}
										<FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1 class="text-3xl font-bold">{title}</h1>
						<hr />
					</div>
					<div
						class="container flex flex-col items-center justify-center article text-lg leading-7"
					>
						<slot />
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
